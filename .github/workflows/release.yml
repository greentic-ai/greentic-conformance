name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run cargo publish with --dry-run"
        required: false
        default: "false"
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  checks:
    name: Pre-Release Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: cargo fmt
        run: cargo fmt -- --check
      - name: cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: cargo test
        run: cargo test --all-targets --all-features

  crate:
    name: Publish Crate
    runs-on: ubuntu-latest
    if: secrets.CARGO_REGISTRY_TOKEN != ''
    needs: checks
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Ensure tag matches crate version
        id: version
        run: |
          metadata=$(cargo metadata --no-deps --format-version 1)
          crate_version=$(echo "$metadata" | jq -r '.packages[] | select(.name=="greentic-conformance") | .version')
          if [[ -z "$crate_version" ]]; then
            echo "Unable to determine crate version"
            exit 1
          fi
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            tag_version="${GITHUB_REF#refs/tags/v}"
            if [[ "$tag_version" != "$crate_version" ]]; then
              echo "Tag version $tag_version does not match Cargo.toml version $crate_version"
              exit 1
            fi
          fi
          echo "crate_version=$crate_version" >> "$GITHUB_OUTPUT"
      - name: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          DRY_RUN: ${{ github.event_name == 'workflow_dispatch' && inputs.dry_run == 'true' }}
        run: |
          if [[ "$DRY_RUN" == "true" ]]; then
            cargo publish --dry-run
          else
            cargo publish --locked
          fi
